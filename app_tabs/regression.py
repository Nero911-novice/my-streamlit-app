import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
from typing import Optional, Tuple
from .utils import create_download_button


@st.cache_data
def generate_regression_data(mu_reg: int, sigma_reg: int, n_subjects: int,
                           threshold_percentile: int) -> Optional[Tuple]:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–µ–≥—Ä–µ—Å—Å–∏–∏ –∫ —Å—Ä–µ–¥–Ω–µ–º—É"""
    try:
        true_abilities = np.random.normal(mu_reg, sigma_reg/2, n_subjects)
        test1_scores = true_abilities + np.random.normal(0, sigma_reg/2, n_subjects)
        test2_scores = true_abilities + np.random.normal(0, sigma_reg/2, n_subjects)
        threshold = np.percentile(test1_scores, threshold_percentile)
        best_subjects_mask = test1_scores >= threshold
        if np.sum(best_subjects_mask) == 0:
            return None
        best_subjects_test1 = test1_scores[best_subjects_mask]
        best_subjects_test2 = test2_scores[best_subjects_mask]
        all_mean_test1 = np.mean(test1_scores)
        all_mean_test2 = np.mean(test2_scores)
        best_mean_test1 = np.mean(best_subjects_test1)
        best_mean_test2 = np.mean(best_subjects_test2)
        return (
            test1_scores, test2_scores, best_subjects_test1, best_subjects_test2,
            all_mean_test1, all_mean_test2, best_mean_test1, best_mean_test2
        )
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
        return None


def regression_to_mean_tab():
    """–í–∫–ª–∞–¥–∫–∞ —Ä–µ–≥—Ä–µ—Å—Å–∏–∏ –∫ —Å—Ä–µ–¥–Ω–µ–º—É"""
    if "visited_tabs" not in st.session_state:
        st.session_state.visited_tabs = set()
    st.session_state.visited_tabs.add("–†–µ–≥—Ä–µ—Å—Å–∏—è –∫ —Å—Ä–µ–¥–Ω–µ–º—É")

    st.header("–†–µ–≥—Ä–µ—Å—Å–∏—è –∫ —Å—Ä–µ–¥–Ω–µ–º—É")
    st.markdown(
        """**–†–µ–≥—Ä–µ—Å—Å–∏—è –∫ —Å—Ä–µ–¥–Ω–µ–º—É** ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —Ñ–µ–Ω–æ–º–µ–Ω, –∫–æ–≥–¥–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–º
    –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –∏–∑–º–µ—Ä–µ–Ω–∏–∏ —Å—Ç—Ä–µ–º–∏—Ç—Å—è –±–ª–∏–∂–µ –∫ —Å—Ä–µ–¥–Ω–µ–º—É –∑–Ω–∞—á–µ–Ω–∏—é –ø–æ–ø—É–ª—è—Ü–∏–∏."""
    )

    col1, col2 = st.columns(2)
    with col1:
        mu_reg = st.slider("–ò—Å—Ç–∏–Ω–Ω–æ–µ —Å—Ä–µ–¥–Ω–µ–µ –ø–æ–ø—É–ª—è—Ü–∏–∏", 0, 100, 50)
        sigma_reg = st.slider("–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ", 5, 30, 15)
    with col2:
        n_subjects = st.slider("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—É–±—ä–µ–∫—Ç–æ–≤", 20, 500, 100)
        threshold_percentile = st.slider("–ü–æ—Ä–æ–≥ –æ—Ç–±–æ—Ä–∞ (–ø—Ä–æ—Ü–µ–Ω—Ç–∏–ª—å)", 70, 95, 80)

    regression_data = generate_regression_data(mu_reg, sigma_reg, n_subjects, threshold_percentile)
    if regression_data:
        (
            test1_scores, test2_scores, best_subjects_test1, best_subjects_test2,
            all_mean_test1, all_mean_test2, best_mean_test1, best_mean_test2
        ) = regression_data

        fig, ax = plt.subplots(figsize=(12, 8))
        ax.scatter(test1_scores, test2_scores, alpha=0.4, label="–í—Å–µ —Å—É–±—ä–µ–∫—Ç—ã", color="gray", s=20)
        ax.scatter(best_subjects_test1, best_subjects_test2, alpha=0.7,
                   label=f"–õ—É—á—à–∏–µ —Å—É–±—ä–µ–∫—Ç—ã (> {threshold_percentile}%)", color="red", s=30)
        min_val = min(np.min(test1_scores), np.min(test2_scores))
        max_val = max(np.max(test1_scores), np.max(test2_scores))
        ax.plot([min_val, max_val], [min_val, max_val], 'k--', alpha=0.5, label="–õ–∏–Ω–∏—è y=x", linewidth=2)
        ax.axvline(all_mean_test1, color='blue', linestyle=':', alpha=0.7,
                  label=f"–°—Ä–µ–¥–Ω–µ–µ –¢–µ—Å—Ç 1 (–≤—Å–µ): {all_mean_test1:.1f}")
        ax.axhline(all_mean_test2, color='green', linestyle=':', alpha=0.7,
                  label=f"–°—Ä–µ–¥–Ω–µ–µ –¢–µ—Å—Ç 2 (–≤—Å–µ): {all_mean_test2:.1f}")
        ax.axvline(best_mean_test1, color='red', linestyle='--', alpha=0.7,
                  label=f"–°—Ä–µ–¥–Ω–µ–µ –¢–µ—Å—Ç 1 (–ª—É—á—à–∏–µ): {best_mean_test1:.1f}")
        ax.axhline(best_mean_test2, color='orange', linestyle='--', alpha=0.7,
                  label=f"–°—Ä–µ–¥–Ω–µ–µ –¢–µ—Å—Ç 2 (–ª—É—á—à–∏–µ): {best_mean_test2:.1f}")
        ax.set_title("–†–µ–≥—Ä–µ—Å—Å–∏—è –∫ —Å—Ä–µ–¥–Ω–µ–º—É", fontsize=14)
        ax.set_xlabel("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–µ—Ä–≤–æ–≥–æ —Ç–µ—Å—Ç–∞")
        ax.set_ylabel("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—Ç–æ—Ä–æ–≥–æ —Ç–µ—Å—Ç–∞")
        ax.grid(True, alpha=0.3)
        ax.legend(loc='upper left', bbox_to_anchor=(1, 1))

        fig.tight_layout()
        st.pyplot(fig, use_container_width=True)
        create_download_button(fig, "regression_to_mean.png")

        diff = best_mean_test1 - best_mean_test2
        pct_diff = (diff / best_mean_test1) * 100 if best_mean_test1 != 0 else 0
        st.markdown(
            f"""
        ### –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
        - –°—Ä–µ–¥–Ω–µ–µ –ø–µ—Ä–≤–æ–≥–æ —Ç–µ—Å—Ç–∞ (–≤—Å–µ): {all_mean_test1:.2f}
        - –°—Ä–µ–¥–Ω–µ–µ –≤—Ç–æ—Ä–æ–≥–æ —Ç–µ—Å—Ç–∞ (–≤—Å–µ): {all_mean_test2:.2f}
        - –°—Ä–µ–¥–Ω–µ–µ –ø–µ—Ä–≤–æ–≥–æ —Ç–µ—Å—Ç–∞ (–ª—É—á—à–∏–µ): {best_mean_test1:.2f}
        - –°—Ä–µ–¥–Ω–µ–µ –≤—Ç–æ—Ä–æ–≥–æ —Ç–µ—Å—Ç–∞ (–ª—É—á—à–∏–µ): {best_mean_test2:.2f}
        - **–†–µ–≥—Ä–µ—Å—Å–∏—è –∫ —Å—Ä–µ–¥–Ω–µ–º—É**: {diff:.2f} –ø—É–Ω–∫—Ç–æ–≤ ({pct_diff:.1f}%)
        """
        )

    st.markdown(
        """### –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞
    
    üìä **–°—É—Ç—å —Ä–µ–≥—Ä–µ—Å—Å–∏–∏ –∫ —Å—Ä–µ–¥–Ω–µ–º—É:**
    –≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –ø–µ—Ä–≤–æ–º –∏–∑–º–µ—Ä–µ–Ω–∏–∏ —á–∞—Å—Ç–∏—á–Ω–æ –æ–±—É—Å–ª–æ–≤–ª–µ–Ω—ã —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å—é,
    –ø–æ—ç—Ç–æ–º—É –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –∏–∑–º–µ—Ä–µ–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Å—Ä–µ–¥–Ω–µ–º –±–ª–∏–∂–µ –∫ –ø–æ–ø—É–ª—è—Ü–∏–æ–Ω–Ω–æ–º—É —Å—Ä–µ–¥–Ω–µ–º—É.

    **–ü—Ä–∏–º–µ—Ä—ã –∏–∑ –∂–∏–∑–Ω–∏:**
    - –°–ø–æ—Ä—Ç—Å–º–µ–Ω –ø–æ—Å–ª–µ —Ä–µ–∫–æ—Ä–¥–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —á–∞—â–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–æ–ª–µ–µ —Å—Ä–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    - –°—Ç—É–¥–µ–Ω—Ç—ã –ø–æ—Å–ª–µ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Å–æ–∫–æ–π –æ—Ü–µ–Ω–∫–∏ –æ–±—ã—á–Ω–æ –ø–æ–ª—É—á–∞—é—Ç –±–æ–ª–µ–µ –æ–±—ã—á–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏
    - –ö–æ–º–ø–∞–Ω–∏–∏ –ø–æ—Å–ª–µ —Ä–µ–∫–æ—Ä–¥–Ω–æ–π –ø—Ä–∏–±—ã–ª–∏ —á–∞—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –∫ –æ–±—ã—á–Ω—ã–º –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º

    **–ß–∞—Å—Ç–∞—è –æ—à–∏–±–∫–∞:** –ü—Ä–∏–ø–∏—Å—ã–≤–∞–Ω–∏–µ —Ä–µ–≥—Ä–µ—Å—Å–∏–∏ –∫ —Å—Ä–µ–¥–Ω–µ–º—É –¥–µ–π—Å—Ç–≤–∏—é –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞

    üîç **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è:**
    - "–ü—Ä–æ–∫–ª—è—Ç–∏–µ –æ–±–ª–æ–∂–∫–∏ Sports Illustrated"
    - –ü–µ—Ä–µ–æ—Ü–µ–Ω–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –ª–µ—á–µ–Ω–∏—è
    - –û—à–∏–±–æ—á–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ç—Ä–µ–Ω–∏–Ω–≥–æ–≤
    """
    )
