import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
from .utils import safe_statistics, create_download_button


def small_samples_tab():
    """–í–∫–ª–∞–¥–∫–∞ –∑–∞–∫–æ–Ω–∞ –º–∞–ª—ã—Ö –≤—ã–±–æ—Ä–æ–∫"""
    if "visited_tabs" not in st.session_state:
        st.session_state.visited_tabs = set()
    st.session_state.visited_tabs.add("–ú–∞–ª—ã–µ –≤—ã–±–æ—Ä–∫–∏")

    st.header("–ó–∞–∫–æ–Ω –º–∞–ª—ã—Ö –≤—ã–±–æ—Ä–æ–∫")
    st.markdown(
        """–ó–∞–∫–æ–Ω –º–∞–ª—ã—Ö —á–∏—Å–µ–ª ‚Äî –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ñ–µ–Ω–æ–º–µ–Ω: –ª—é–¥–∏ –ø–µ—Ä–µ–æ—Ü–µ–Ω–∏–≤–∞—é—Ç –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å
    –≤—ã–≤–æ–¥–æ–≤ –ø—Ä–∏ –º–∞–ª—ã—Ö –≤—ã–±–æ—Ä–∫–∞—Ö. –ü—Ä–∏ –º–∞–ª–æ–º n —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –º–æ–∂–µ—Ç –¥–∞–≤–∞—Ç—å —Å–∏–ª—å–Ω–æ –æ—à–∏–±–æ—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã."""
    )

    col1, col2, col3 = st.columns(3)
    with col1:
        dist_small = st.selectbox("–ò—Å—Ö–æ–¥–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ",
                                 ["–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ", "–†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ", "–≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ", "–ë–∏–º–æ–¥–∞–ª—å–Ω–æ–µ"])
    with col2:
        n_small = st.slider("–†–∞–∑–º–µ—Ä –º–∞–ª–µ–Ω—å–∫–æ–π –≤—ã–±–æ—Ä–∫–∏ (n)", 2, 30, 5)
    with col3:
        num_sim = st.slider("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º—É–ª—è—Ü–∏–π", 100, 2000, 500, step=100)

    means_small = []
    for i in range(num_sim):
        np.random.seed(i + 1000)
        if dist_small == "–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ":
            sample = np.random.normal(0, 1, n_small)
        elif dist_small == "–†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ":
            sample = np.random.uniform(0, 1, n_small)
        elif dist_small == "–≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ":
            sample = np.random.exponential(1, n_small)
        elif dist_small == "–ë–∏–º–æ–¥–∞–ª—å–Ω–æ–µ":
            half = n_small // 2
            sample = np.concatenate([
                np.random.normal(-2, 1, half),
                np.random.normal(2, 1, n_small - half)
            ])
        means_small.append(np.mean(sample))

    means_small = np.array(means_small)

    fig, ax = plt.subplots(figsize=(12, 6))
    ax.hist(means_small, bins=20, density=True, alpha=0.7, edgecolor='black', color='lightcoral')

    emp_mean = np.mean(means_small)
    ax.axvline(emp_mean, color='green', linestyle='--', linewidth=2,
              label=f'–≠–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–µ —Å—Ä–µ–¥–Ω–µ–µ: {emp_mean:.3f}')

    ax.set_title(f"–ó–∞–∫–æ–Ω –º–∞–ª—ã—Ö –≤—ã–±–æ—Ä–æ–∫ (n={n_small}, —Å–∏–º—É–ª—è—Ü–∏–π={num_sim})", fontsize=14)
    ax.set_xlabel("–°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ")
    ax.set_ylabel("–ü–ª–æ—Ç–Ω–æ—Å—Ç—å")
    ax.legend()
    ax.grid(True, alpha=0.3)

    fig.tight_layout()
    st.pyplot(fig, use_container_width=True)

    create_download_button(fig, "small_law.png")

    stats_dict = safe_statistics(means_small)
    st.markdown(
        f"""
    **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞**

    –ü—Ä–∏ –º–∞–ª–æ–º —Ä–∞–∑–º–µ—Ä–µ –≤—ã–±–æ—Ä–∫–∏ n = {n_small}:
    - –°—Ä–µ–¥–Ω–µ–µ –ø–æ —Å–∏–º—É–ª—è—Ü–∏—è–º: {stats_dict['mean']:.4f}
    - –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ: {stats_dict['std']:.4f}
    - –î–∏–∞–ø–∞–∑–æ–Ω –∑–Ω–∞—á–µ–Ω–∏–π: [{stats_dict['min']:.3f}, {stats_dict['max']:.3f}]

    **–í—ã–≤–æ–¥:** –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—ã–±–æ—Ä–æ—á–Ω—ã—Ö —Å—Ä–µ–¥–Ω–∏—Ö –æ—Å—Ç–∞–µ—Ç—Å—è —à–∏—Ä–æ–∫–∏–º –∏ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–º
    –ø—Ä–∏ –º–∞–ª—ã—Ö —Ä–∞–∑–º–µ—Ä–∞—Ö –≤—ã–±–æ—Ä–∫–∏.

    ---
    üî¥ **–†–∏—Å–∫–∏ –º–∞–ª—ã—Ö –≤—ã–±–æ—Ä–æ–∫**:
    - –í—ã—Å–æ–∫–∞—è –¥–∏—Å–ø–µ—Ä—Å–∏—è –æ—Ü–µ–Ω–æ–∫ —Å—Ä–µ–¥–Ω–µ–≥–æ
    - –¶–ü–¢ –µ—â—ë –Ω–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–∏ n < 30
    - –í–æ–∑–º–æ–∂–Ω—ã —Å–µ—Ä—å—ë–∑–Ω—ã–µ –æ—à–∏–±–∫–∏ –≤ –≤—ã–≤–æ–¥–∞—Ö

    üîµ **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–ª—å–∑–∞**:
    - –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤–∞–∂–Ω–æ—Å—Ç—å –æ–±—ä—ë–º–∞ –≤—ã–±–æ—Ä–∫–∏
    - –ü–æ–º–æ–≥–∞–µ—Ç –ø–æ–Ω—è—Ç—å –Ω–µ–Ω–∞–¥—ë–∂–Ω–æ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–∞–ª—ã—Ö –≤—ã–±–æ—Ä–æ–∫
    - –û–±—ä—è—Å–Ω—è–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
    """
    )
