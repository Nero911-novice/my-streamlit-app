import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from io import BytesIO

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ---
st.set_page_config(page_title="–î–µ–º–æ–≤–µ—Ä—Å–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–Ω—ã—Ö –∑–∞–∫–æ–Ω–æ–≤", layout="wide")
sns.set_theme(style="whitegrid")

st.title("üìä –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–Ω—ã—Ö –∑–∞–∫–æ–Ω–æ–≤")
tabs = st.tabs(["–ó–∞–∫–æ–Ω —Ç—Ä—ë—Ö —Å–∏–≥–º", "–¶–ü–¢", "–ó–ë–ß","–ú–∞–ª—ã–µ –≤—ã–±–æ—Ä–∫–∏"])

# === 1. –ó–∞–∫–æ–Ω —Ç—Ä—ë—Ö —Å–∏–≥–º ===
with tabs[0]:
    st.header("–ó–∞–∫–æ–Ω —Ç—Ä—ë—Ö —Å–∏–≥–º (—ç–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–µ –ø—Ä–∞–≤–∏–ª–æ)")
    mu = st.slider("–°—Ä–µ–¥–Ω–µ–µ (Œº)", 20, 80, 50)
    sigma = st.slider("–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ (œÉ)", 1, 30, 10)
    size = st.slider("–†–∞–∑–º–µ—Ä –≤—ã–±–æ—Ä–∫–∏", 1000, 50000, 10000, step=1000)

    data = np.random.normal(mu, sigma, size)
    fig, ax = plt.subplots(figsize=(10, 5))
    ax.hist(data, bins=50, density=True, color='lightgray', edgecolor='black')

    # –ó–∞–ª–∏–≤–∫–∏ –∑–æ–Ω ¬±1œÉ, ¬±2œÉ, ¬±3œÉ –∏ –∏—Ö –≥—Ä–∞–Ω–∏—Ü—ã
    colors = ['#b2df8a', '#fdbf6f', '#fb9a99']
    labels = ['¬±1œÉ (68%)', '¬±2œÉ (95%)', '¬±3œÉ (99.7%)']
    for i, color, label in zip([1, 2, 3], colors, labels):
        ax.axvspan(mu - i * sigma, mu + i * sigma, color=color, alpha=0.3, label=label)
        ax.axvline(mu - i * sigma, color='red', linestyle='--', linewidth=1)
        ax.axvline(mu + i * sigma, color='red', linestyle='--', linewidth=1)

    ymax = ax.get_ylim()[1]

    # –ê–Ω–Ω–æ—Ç–∞—Ü–∏–∏
    ax.annotate(
        "68% –∑–Ω–∞—á–µ–Ω–∏–π\n(¬±1œÉ)",
        xy=(mu, ymax * 0.9), xycoords='data',
        xytext=(0, -40), textcoords='offset points',
        ha='center', va='top',
        arrowprops=dict(arrowstyle='->', color='black'),
        fontsize=9
    )
    ax.annotate(
        "95% –∑–Ω–∞—á–µ–Ω–∏–π\n(¬±2œÉ)",
        xy=(mu - 2*sigma, ymax * 0.6), xycoords='data',
        xytext=(-40, -10), textcoords='offset points',
        ha='left', va='top',
        arrowprops=dict(arrowstyle='->', color='black'),
        fontsize=9
    )
    ax.annotate(
        "–ü–æ—á—Ç–∏ –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è\n–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö ¬±3œÉ",
        xy=(mu + 2.5*sigma, ymax * 0.6), xycoords='data',
        xytext=(40, -10), textcoords='offset points',
        ha='right', va='top',
        arrowprops=dict(arrowstyle='->', color='black'),
        fontsize=9
    )

    ax.set_title(f"–ó–∞–∫–æ–Ω —Ç—Ä—ë—Ö —Å–∏–≥–º (Œº = {mu}, œÉ = {sigma})")
    ax.set_xlabel("–ó–Ω–∞—á–µ–Ω–∏–µ")
    ax.set_ylabel("–ü–ª–æ—Ç–Ω–æ—Å—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏")
    ax.legend()

    fig.tight_layout()
    st.pyplot(fig, use_container_width=True)

    buf = BytesIO()
    fig.savefig(buf, format="png")
    st.download_button("üì• –°–∫–∞—á–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ (PNG)", buf.getvalue(), "three_sigma.png", "image/png")

    st.markdown(f"""
**–ü–æ—è—Å–Ω–µ–Ω–∏–µ**  
–ì—Ä–∞—Ñ–∏–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç _–∑–∞–∫–æ–Ω —Ç—Ä—ë—Ö —Å–∏–≥–º_, —Å–æ–≥–ª–∞—Å–Ω–æ –∫–æ—Ç–æ—Ä–æ–º—É:
- –æ–∫–æ–ª–æ **68%** –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ–ø–∞–¥–∞—é—Ç –≤ –¥–∏–∞–ø–∞–∑–æ–Ω ¬±1œÉ –æ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ,
- –æ–∫–æ–ª–æ **95%** ‚Äî –≤ –¥–∏–∞–ø–∞–∑–æ–Ω ¬±2œÉ,
- –æ–∫–æ–ª–æ **99.7%** ‚Äî –≤ –¥–∏–∞–ø–∞–∑–æ–Ω ¬±3œÉ.
""")
    st.write(f"–ó–¥–µ—Å—å: Œº = {mu}, œÉ = {sigma}, n = {size}.")
    st.markdown("""
üî¥ **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è**:
- –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–∏ –∫ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º—É —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—é.
- –ù–µ–ø—Ä–∏–º–µ–Ω–∏–º –∫ –º–æ—â–Ω–æ —Å–∫–æ—à–µ–Ω–Ω—ã–º, –º—É–ª—å—Ç–∏–ø–∏–∫–æ–≤—ã–º, –¥–∏—Å–∫—Ä–µ—Ç–Ω—ã–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è–º.
- –ù–∞ –º–∞–ª–µ–Ω—å–∫–∏—Ö –≤—ã–±–æ—Ä–∫–∞—Ö –º–æ–∂–µ—Ç –Ω–µ —Å–æ–±–ª—é–¥–∞—Ç—å—Å—è ‚Äî –≤—ã–±–æ—Ä–æ—á–Ω–∞—è –¥–∏—Å–ø–µ—Ä—Å–∏—è –µ—â—ë ¬´–ø—Ä—ã–≥–∞–µ—Ç¬ª.
- –í—ã–±—Ä–æ—Å—ã –∏ —à—É–º –Ω–∞—Ä—É—à–∞—é—Ç –ø—Ä–∞–≤–∏–ª–æ: –≤ —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏ –∑–∞ 3 —Å–∏–≥–º—ã –º–æ–∂–µ—Ç –≤—ã—Ö–æ–¥–∏—Ç—å –∏ 5% –Ω–∞–±–ª—é–¥–µ–Ω–∏–π.
""")

# === 2. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –ø—Ä–µ–¥–µ–ª—å–Ω–∞—è —Ç–µ–æ—Ä–µ–º–∞ ===
with tabs[1]:
    st.header("–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –ø—Ä–µ–¥–µ–ª—å–Ω–∞—è —Ç–µ–æ—Ä–µ–º–∞")
    dist_type = st.selectbox(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ",
        ["–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ", "–†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ", "–≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ", "–ë–∏–º–æ–¥–∞–ª—å–Ω–æ–µ"]
    )
    sample_size = st.slider("–†–∞–∑–º–µ—Ä –æ–¥–Ω–æ–π –≤—ã–±–æ—Ä–∫–∏", 2, 100, 30)
    num_samples = st.slider("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–±–æ—Ä–æ–∫", 100, 5000, 1000, step=100)

    def generate(dist, n):
        if dist == "–†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ":
            return np.random.uniform(0, 1, n)
        if dist == "–≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ":
            return np.random.exponential(1.0, n)
        if dist == "–ë–∏–º–æ–¥–∞–ª—å–Ω–æ–µ":
            half = n // 2
            return np.concatenate([
                np.random.normal(-2, 1, half),
                np.random.normal(2, 1, n - half)
            ])
        return np.random.normal(0, 1, n)

    means = [np.mean(generate(dist_type, sample_size)) for _ in range(num_samples)]
    fig2, ax2 = plt.subplots(figsize=(10, 5))
    sns.histplot(means, bins=30, kde=True, ax=ax2, color="skyblue", edgecolor='black')

    ax2.set_title(f"–¶–ü–¢: –°—Ä–µ–¥–Ω–∏–µ {num_samples} –≤—ã–±–æ—Ä–æ–∫ ({dist_type}, —Ä–∞–∑–º–µ—Ä = {sample_size})")
    ax2.set_xlabel("–°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∫–∏")
    ax2.set_ylabel("–ß–∞—Å—Ç–æ—Ç–∞")

    fig2.tight_layout()
    st.pyplot(fig2, use_container_width=True)

    buf = BytesIO()
    fig2.savefig(buf, format="png")
    st.download_button("üì• –°–∫–∞—á–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ (PNG)", buf.getvalue(), "clt.png", "image/png")

    st.markdown(f"""
**–ü–æ—è—Å–Ω–µ–Ω–∏–µ**  
_–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –ø—Ä–µ–¥–µ–ª—å–Ω–∞—è —Ç–µ–æ—Ä–µ–º–∞_ —É—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç, —á—Ç–æ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ **—Å—Ä–µ–¥–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π** –±—É–¥–µ—Ç —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è –∫ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º—É –ø—Ä–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –≤—ã–±–æ—Ä–∫–∏.
""")
    st.write(f"–ó–¥–µ—Å—å: —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ = {dist_type.lower()}, —Ä–∞–∑–º–µ—Ä –≤—ã–±–æ—Ä–∫–∏ = {sample_size}, —á–∏—Å–ª–æ –≤—ã–±–æ—Ä–æ–∫ = {num_samples}.")
    st.markdown("""
üî¥ **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è**:
- –ù—É–∂–Ω—ã –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –∏ –æ–¥–∏–Ω–∞–∫–æ–≤–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (i.i.d.).
- –†–∞–∑–º–µ—Ä –≤—ã–±–æ—Ä–∫–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–æ–ª—å—à–∏–º. –î–ª—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Å–ª—É—á–∞—è 30+, –Ω–æ –¥–ª—è —Ç—è–∂—ë–ª—ã—Ö —Ö–≤–æ—Å—Ç–æ–≤ –º–æ–∂–µ—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è 100+.
- –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –∞–≥—Ä–µ–≥–∞—Ç–∞—Ö –Ω–µ—Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç—Ä–µ–Ω–¥–æ–≤—ã—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä—è–¥–æ–≤).
- –ü—Ä–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π –¥–∏—Å–ø–µ—Ä—Å–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ö–æ—à–∏) –¶–ü–¢ –Ω–µ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è.
""")

# === 3. –ó–∞–∫–æ–Ω –±–æ–ª—å—à–∏—Ö —á–∏—Å–µ–ª ===
with tabs[2]:
    st.header("–ó–∞–∫–æ–Ω –±–æ–ª—å—à–∏—Ö —á–∏—Å–µ–ª")
    dist_type_lln = st.selectbox(
        "–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö",
        ["–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ", "–†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ", "–≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ"],
        key="lln"
    )
    trials = st.slider("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø—ã—Ç–∞–Ω–∏–π", 100, 20000, 10000, step=100)

    def sample(dist, n):
        if dist == "–†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ":
            return np.random.uniform(0, 1, n)
        if dist == "–≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ":
            return np.random.exponential(1.0, n)
        return np.random.normal(0, 1, n)

    data_lln = sample(dist_type_lln, trials)
    cumulative = np.cumsum(data_lln) / np.arange(1, trials + 1)
    expected = np.mean(data_lln)

    fig3, ax3 = plt.subplots(figsize=(10, 5))
    ax3.plot(cumulative, label="–ù–∞–∫–æ–ø–ª–µ–Ω–Ω–æ–µ —Å—Ä–µ–¥–Ω–µ–µ")
    ax3.axhline(expected, color='r', linestyle='--', label=f"–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–µ —Å—Ä–µ–¥–Ω–µ–µ ({expected:.2f})")

    ax3.set_title("–ó–∞–∫–æ–Ω –±–æ–ª—å—à–∏—Ö —á–∏—Å–µ–ª")
    ax3.set_xlabel("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø—ã—Ç–∞–Ω–∏–π")
    ax3.set_ylabel("–°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ")
    ax3.legend()

    fig3.tight_layout()
    st.pyplot(fig3, use_container_width=True)

    buf = BytesIO()
    fig3.savefig(buf, format="png")
    st.download_button("üì• –°–∫–∞—á–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ (PNG)", buf.getvalue(), "lln.png", "image/png")

    st.markdown(f"""
**–ü–æ—è—Å–Ω–µ–Ω–∏–µ**  
_–ó–∞–∫–æ–Ω –±–æ–ª—å—à–∏—Ö —á–∏—Å–µ–ª_ —É—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç, —á—Ç–æ –ø–æ –º–µ—Ä–µ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–∞–±–ª—é–¥–µ–Ω–∏–π —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±—É–¥–µ—Ç —Å—Ö–æ–¥–∏—Ç—å—Å—è –∫ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–º—É –æ–∂–∏–¥–∞–Ω–∏—é —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è. –ó–¥–µ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ **{trials}** –∏—Å–ø—ã—Ç–∞–Ω–∏–π –∏–∑ **{dist_type_lln.lower()} —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è**.
""")
    st.write(f"–ó–¥–µ—Å—å: —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ = {dist_type_lln.lower()}, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø—ã—Ç–∞–Ω–∏–π = {trials}.")
    st.markdown("""
üî¥ **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è**:
- –î–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–º–∏ –∏ –æ–¥–∏–Ω–∞–∫–æ–≤–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º–∏.
- –°—Ö–æ–¥–∏–º–æ—Å—Ç—å –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–¥–ª–µ–Ω–Ω–æ–π, –æ—Å–æ–±–µ–Ω–Ω–æ –ø—Ä–∏ –≤—ã—Å–æ–∫–æ–π –¥–∏—Å–ø–µ—Ä—Å–∏–∏.
- –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —Ä–µ–¥–∫–æ —É–¥–∞—ë—Ç—Å—è —Å–æ–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ.
- –ó–ë–ß –Ω–µ –≥–æ–≤–æ—Ä–∏—Ç –Ω–∏—á–µ–≥–æ –æ —Å–∫–æ—Ä–æ—Å—Ç–∏ —Å—Ö–æ–¥–∏–º–æ—Å—Ç–∏ ‚Äî –º–æ–∂–Ω–æ –Ω–µ –¥–æ–∂–¥–∞—Ç—å—Å—è –µ—ë –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ.
""")

# === 4. –ó–∞–∫–æ–Ω –º–∞–ª—ã—Ö –≤—ã–±–æ—Ä–æ–∫ ===
with tabs[3]:
    st.header("–ó–∞–∫–æ–Ω –º–∞–ª—ã—Ö –≤—ã–±–æ—Ä–æ–∫")
    st.markdown(
        "–ù–µ–±–æ–ª—å—à–∏–µ –≤—ã–±–æ—Ä–∫–∏ –¥–∞—é—Ç —Å–∏–ª—å–Ω–æ –≤–∞—Ä—å–∏—Ä—É—é—â–∏–µ—Å—è –æ—Ü–µ–Ω–∫–∏: "
        "—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–∏—Ö –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–∞–ª–µ–∫–∏–º –æ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ, "
        "–∞ –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã ‚Äì —Å–ª–∏—à–∫–æ–º —à–∏—Ä–æ–∫–∏–º–∏."
    )

    dist_small = st.selectbox(
        "–ò—Å—Ö–æ–¥–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ",
        ["–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ", "–†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ", "–≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ", "–ë–∏–º–æ–¥–∞–ª—å–Ω–æ–µ"]
    )
    n_small = st.slider("–†–∞–∑–º–µ—Ä –º–∞–ª–µ–Ω—å–∫–æ–π –≤—ã–±–æ—Ä–∫–∏ (n)", 2, 30, 5)
    k_trials = st.slider("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –≤—ã–±–æ—Ä–æ–∫", 100, 2000, 500, step=100)

    # –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    def gen(dist, m):
        if dist == "–†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ":
            return np.random.uniform(0, 1, m)
        if dist == "–≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ":
            return np.random.exponential(1, m)
        if dist == "–ë–∏–º–æ–¥–∞–ª—å–Ω–æ–µ":
            h = m // 2
            return np.concatenate([
                np.random.normal(-2, 1, h),
                np.random.normal(2, 1, m - h)
            ])
        return np.random.normal(0, 1, m)

    # –°—á–∏—Ç–∞–µ–º —Å—Ä–µ–¥–Ω–∏–µ
    means_small = [np.mean(gen(dist_small, n_small)) for _ in range(k_trials)]

    # –†–∏—Å—É–µ–º –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—É
    fig4, ax4 = plt.subplots(figsize=(10, 5))
    sns.histplot(means_small, bins=20, kde=True, ax=ax4, color="mediumpurple", edgecolor="black")
    ax4.set_title(f"–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–∏—Ö –∏–∑ {k_trials} –≤—ã–±–æ—Ä–æ–∫ –ø–æ {n_small} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–∏–∑ {dist_small})")
    ax4.set_xlabel("–°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ")
    ax4.set_ylabel("–ß–∞—Å—Ç–æ—Ç–∞")
    fig4.tight_layout()
    st.pyplot(fig4, use_container_width=True)

    # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ
    buf4 = BytesIO()
    fig4.savefig(buf4, format="png")
    st.download_button("üì• –°–∫–∞—á–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ (PNG)", buf4.getvalue(), "small_sample.png", "image/png")

    # –¢–µ–∫—Å—Ç
    st.markdown(f"""
**–ü–æ—è—Å–Ω–µ–Ω–∏–µ**  
–ü—Ä–∏ **–º–∞–ª—ã—Ö** n (= {n_small}) —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—ã–±–æ—Ä–æ—á–Ω—ã—Ö —Å—Ä–µ–¥–Ω–∏—Ö –æ—Å—Ç–∞—ë—Ç—Å—è —à–∏—Ä–æ–∫–∏–º –∏ —á–∞—Å—Ç–æ —Å–∏–ª—å–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –Ω–æ—Ä–º–∞–ª–∏, –¥–∞–∂–µ –µ—Å–ª–∏ –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–æ—Ä–º–∞–ª—å–Ω—ã.

üî¥ **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏ —Ä–∏—Å–∫–∏**:
- –í—ã—Å–æ–∫–∞—è –¥–∏—Å–ø–µ—Ä—Å–∏—è –æ—Ü–µ–Ω–æ–∫ —Å—Ä–µ–¥–Ω–µ–≥–æ ‚Äì –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª —Å–ª–∏—à–∫–æ–º —à–∏—Ä–æ–∫.
- –ï—Å–ª–∏ n < 30, **–¶–ü–¢** –µ—â—ë –Ω–µ ¬´—Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞¬ª –≤ –ø–æ–ª–Ω—É—é —Å–∏–ª—É.
- –î–ª—è —Å–∫–æ—à–µ–Ω–Ω—ã—Ö –∏–ª–∏ —Ç—è–∂—ë–ª–æ—Ö–≤–æ—Å—Ç—ã—Ö —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π –Ω—É–∂–Ω—ã **–≥–æ—Ä–∞–∑–¥–æ** –±–æ–ª—å—à–∏–µ n.
- –í—ã–≤–æ–¥—ã –ø–æ –º–∞–ª–µ–Ω—å–∫–æ–π –≤—ã–±–æ—Ä–∫–µ –º–æ–≥—É—Ç –±—ã—Ç—å **–Ω–µ–Ω–∞–¥–µ–∂–Ω—ã** –∏ –ª–µ–≥–∫–æ —Å–±–∏—Ç—å —Å —Ç–æ–ª–∫—É.

 **–ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ—è–≤–ª–µ–Ω–∏—è –∑–∞–∫–æ–Ω–∞ –º–∞–ª—ã—Ö —á–∏—Å–µ–ª –≤ —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏:**
    - –û–ø—Ä–æ—Å—ã –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –º–Ω–µ–Ω–∏—è —Å –º–∞–ª–µ–Ω—å–∫–æ–π –≤—ã–±–æ—Ä–∫–æ–π —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.
    - –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –Ω–∞ –Ω–µ–±–æ–ª—å—à–∏—Ö –≥—Ä—É–ø–ø–∞—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤.
    - –ü—Ä–æ–≥–Ω–æ–∑—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∞–ª–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–∞–±–ª—é–¥–µ–Ω–∏–π –≤ –±–∏–∑–Ω–µ—Å–µ –∏–ª–∏ —Å–ø–æ—Ä—Ç–µ.
    - –û—à–∏–±–∫–∞ –∏–≥—Ä–æ–∫–∞ –≤ –∞–∑–∞—Ä—Ç–Ω—ã—Ö –∏–≥—Ä–∞—Ö (–æ–∂–∏–¥–∞–Ω–∏–µ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏ –ø–æ—Ç–µ—Ä—å).
    
    –í–∞–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤—ã–≤–æ–¥–æ–≤, —Å–¥–µ–ª–∞–Ω–Ω—ã—Ö –Ω–∞ –º–∞–ª—ã—Ö –≤—ã–±–æ—Ä–∫–∞—Ö, –∏ —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è –∫ —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–∞ –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–∞—Ö –¥–∞–Ω–Ω—ã—Ö, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–¥–µ–∂–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏.
    """)
